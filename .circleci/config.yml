
defaults: &defaults
  working_directory: ~/i2c-bus-promised
  docker:
    - image: circleci/node:8.9-stretch

whitelist: &whitelist
  paths:
    - .git/
    - examples/
    - flow-typed/*
    - node_modules/*
    - src/*
    - test/*
    - .babelrc
    - .eslintignore
    - .eslintrc.js
    - .flowconfig
    - .gitignore
    - API.md
    - LICENSE.md
    - package.json
    - README.md
    - release.config.js
    - yarn.lock
    

version: 2
jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependency-cache--{{ checksum "package.json" }}
          - dependency-cache--
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache--{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/i2c-bus-promised
          <<: *whitelist
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/i2c-bus-promised
      - run:
          name: Install Flow-Typed
          command: yarn flow-typed
      - run:
          name: Eslint check
          command: yarn lint
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/i2c-bus-promised
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: ~/i2c-bus-promised
          <<: *whitelist
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/i2c-bus-promised
      - { run: { name: 'Write NPM Token to ~/.npmrc', command: 'echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc' } }
      - { run: { name: 'Publish to NPM', command: 'npm publish --access=public' } }
  release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/i2c-bus-promised
      - run:
          name: Semantic Release
          command: yarn semantic-release
workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - build:
          requires:
            - checkout
      - release:
          requires:
            - build
            - lint
          filters:
            branches:
              only: master

